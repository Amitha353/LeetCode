/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isCompleteTree(TreeNode root) {
        if(root == null) return true;
        
        Queue<TreeNode> queue = new LinkedList<>();
        queue.offer(root);
        boolean isComplete = true;
        
        while(!queue.isEmpty()) {
            TreeNode curr = queue.poll();
            
            if(curr.left != null) {
                if(!isComplete) {
                    return isComplete;
                }
                queue.offer(curr.left);
            } else {
                isComplete = false;
            }
            
            if(curr.right != null) {
                if(!isComplete) {
                    return isComplete;
                }
                queue.offer(curr.right);
            } else {
                isComplete = false;
            }
        }
        return true;
    }
}

/* BFS
Time - O(n)
Space - O(n)
*/
