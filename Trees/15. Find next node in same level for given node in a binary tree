import java.util.*;

class Node
{
    int key;
    Node left = null, right = null;
 
    Node(int key) {
        this.key = key;
    }
}

public class HelloWorld{

     public static void main(String []args){
        System.out.println("Hello World");
        
        Node root = new Node(1);
        root.left = new Node(2);
        root.right = new Node(3);
        root.left.left = new Node(4);
        root.left.right = new Node(5);
        root.right.left = new Node(6);
        root.right.left.left = new Node(7);
        root.right.left.right = new Node(8);
        
         Node right = findRightNode(root, 1);
        if (right != null) {
            System.out.println("Right Node is " + right.key);
        } else {
            System.out.println("Right Node doesn't exists");
        }
 
         right = findRightNode(root, 2);
        if (right != null) {
            System.out.println("Right Node is " + right.key);
        } else {
            System.out.println("Right Node doesn't exists");
        }
        
         right = findRightNode(root, 5);
        if (right != null) {
            System.out.println("Right Node is " + right.key);
        } else {
            System.out.println("Right Node doesn't exists");
        }
        
         right = findRightNode(root, 7);
        if (right != null) {
            System.out.println("Right Node is " + right.key);
        } else {
            System.out.println("Right Node doesn't exists");
        }
     }
     
     public static Node findRightNode(Node root, int val) {
         if(root == null) return root;
         
         Queue<Node> queue = new LinkedList<>();
         queue.offer(root);
         Node result = null;
         while(!queue.isEmpty()) {
             Node curr = queue.poll();
             if(curr.key == val) {
                 if(queue.size() >0){
                     result = queue.poll();
                     return result;
                 }
             }
             if(curr.left != null) {
                 queue.offer(curr.left);
             }
             if(curr.right != null) {
                 queue.offer(curr.right);
             }
         }
         return result;
     }
}
