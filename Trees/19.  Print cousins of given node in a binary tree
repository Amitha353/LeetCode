/* package codechef; // don't place package name! */

import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Node {
    int key;
    Node left = null, right = null;
    
    Node(int key) {
        this.key = key;
    }
}

class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
		Node root = new Node(1);
        root.left = new Node(2);
        root.right = new Node(3);
        root.left.left = new Node(4);
        root.left.right = new Node(5);
        root.right.left = new Node(6);
        root.right.right = new Node(7);
        
        cousinFinder(root, root.right.left);
	}
	
	public static void cousinFinder(Node root, Node target) {
	    Queue<Node> queue = new LinkedList<>();
	    queue.offer(root);
	    boolean found = false;
	    
	    while(!queue.isEmpty()) {
	        int size = queue.size();
	        for(int i = 0; i < size; i++) {
	            Node curr = queue.poll();
	            if(curr.left == target || curr.right == target) {
	                found = true;
	            } else {
	                if(curr.left != null) queue.offer(curr.left);
	                if(curr.right != null) queue.offer(curr.right);
	            }
	        }
	        
	        if(found) {
	            int sz = queue.size();
	            System.out.println("The cousins are: ");
	            for(int i = 0; i < sz; i++) {
	                Node temp = queue.poll();
	                System.out.print(temp.key + "  ");
	            }
	        }
	    }
	    return;
	}
}


/* 
BFS
- Time Complexity - O(n)
- Space Complexity - O(n)
*/
