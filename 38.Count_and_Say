class Solution {
    public String countAndSay(int n) {
        String s="11";
        StringBuilder res=new StringBuilder();
        if(n == 1) return "1";
        if(n == 2) return "11";
        for(int i=3;i<=n;i++){
			char top=s.charAt(0);
            int cnt=1;
            res.setLength(0);
            for(int j=1;j<s.length();j++){
                char c=s.charAt(j);
                if(top==c) cnt++;
                else {
                    res.append(cnt).append(top);
                    cnt=1;
                }
                top=c;
            }
            res.append(cnt).append(top);
            s=res.toString();
        }
        return res.toString();
    }
}

/* Idea
- Generate all terms from 1 to n
- First two terms are initialized as "1" and "11" and all other terms are generated use=ing previous terms.
- To generate a term using previous term, we can the previous term
- While scanning a term, we keep track of count of all onsecutive characters.
- For sequence of same characters, we append the count followed by characters to generate next item.

- Time Complexity : O(N * S) # S -> length of string
- Space: O(S)
*/
