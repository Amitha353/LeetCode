class Solution {
    public boolean isValid(String s) {
        Stack<Character> stack = new Stack<>();
        for(char c: s.toCharArray()) {
            if(c == '{') {
                stack.push('}');
            } else if(c == '(') {
                stack.push(')');
            } else if(c == '[') {
                stack.push(']');
            } else if(stack.isEmpty() || stack.pop() != c) {
                return false;
            }
        }
        return stack.isEmpty();
    }
}

/* Time Complexity - O(n) - since we simply traverse the given string one character at a time and push and pop operations on a stack take O(1) time.
Space Complexity - O(n) - push all openig brackets onto the stack worst case all the characters can be pushed onto the stack.
*/
