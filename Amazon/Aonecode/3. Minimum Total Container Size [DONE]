
https://aonecode.com/Amazon-Online-Assessment-Minimum-Total-Container-Size
https://leetcode.com/problems/minimum-difficulty-of-a-job-schedule/

public class Main
{
	public static void main(String[] args) {
		System.out.println(minDifficulty(new int[]{6,5,4,3,2,1}, 2));
		System.out.println(minDifficulty(new int[]{9,9,9}, 4));
		System.out.println(minDifficulty(new int[]{1,1,1}, 3));
		System.out.println(minDifficulty(new int[]{7,1,7,1,7,1}, 3));
		System.out.println(minDifficulty(new int[]{11,111,22,222,33,333,44,444}, 6));
		System.out.println("====================");
		System.out.println(minDifficulty(new int[]{10, 2, 20, 5, 15, 10, 1}, 3));
		System.out.println(minDifficulty(new int[]{10, 2, 20, 5, 15, 10, 1}, 5));
		System.out.println(minDifficulty(new int[]{5, 4, 2, 4, 3, 4, 5, 4}, 4));
		System.out.println(minDifficulty(new int[]{22, 12, 1, 14, 17}, 2));
	}
	
	public static int minDifficulty(int[] jobDifficulty, int d) {
        
		int n = jobDifficulty.length; 
        if(n < d) return -1;
        int[][] dp = new int[d][n];
        
        dp[0][0] = jobDifficulty[0];
        for(int i = 1; i < n; i++){
            dp[0][i] = Math.max(jobDifficulty[i],dp[0][i-1]);
        }
        
        for(int i = 1; i < d; i++){
            for(int j = i; j < n; j++){
                int localMax = jobDifficulty[j];
                dp[i][j] = Integer.MAX_VALUE;
                for(int r = j; r >= i; r--){
                    localMax = Math.max(localMax,jobDifficulty[r]);
                    dp[i][j] =  Math.min(dp[i][j],dp[i-1][r-1] + localMax);
                }
            }
        }
        
        return dp[d-1][n-1];
    }
}
