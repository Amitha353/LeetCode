import java.util.*;
import java.util.List;
import java.util.Scanner;
import java.util.stream.Collectors;

class Solution {
    public static int storageOptimization(int n, int m, List<Integer> h, List<Integer> v) {
        // WRITE YOUR BRILLIANT CODE HERE
        if(n==0 || m==0) return 0;
        if(n==h.size() && m==v.size()) return (n+1)*(m+1);
        
        //Collections.sort(h);
        //Collections.sort(v);
    
        int h1=1,v1=1;
        int c=1;
        for(int i=1;i<h.size();i++)
        {
            if(h.get(i)==h.get(i-1)+1)
                c++;
            else
                c=1;
            h1= h1>c?h1:c;
        }
        c=1;
        for(int i=1;i<v.size();i++)
        {
            if(v.get(i)==v.get(i-1)+1)
                c++;
            else
                c=1;
            v1= h1>c?v1:c;
        }

        return (h1+1)*(v1+1);
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = Integer.parseInt(scanner.nextLine());
        int m = Integer.parseInt(scanner.nextLine());
        List<Integer> h = Arrays.stream(scanner.nextLine().split(" ")).map(Integer::parseInt).collect(Collectors.toList());
        List<Integer> v = Arrays.stream(scanner.nextLine().split(" ")).map(Integer::parseInt).collect(Collectors.toList());
        scanner.close();
        int res = storageOptimization(n, m, h, v);
        System.out.println(res);
    }
}

//https://algo.monster/problems/storage_optimization
