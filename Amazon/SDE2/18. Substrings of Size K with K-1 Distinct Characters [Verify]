// https://algo.monster/problems/substrings_of_size_K_with_K_distinct_chars

import java.util.*;
class Solution {
    public static String[] subString(String s, int k){
       // WRITE YOUR BRILLIANT CODE HERE
        HashSet<String> found = new HashSet<>();
        ArrayList<String> res = new ArrayList<>();
        // char -> index of (only) occurence in substring
        HashMap<Character, Integer> occur = new HashMap<>();
        // start index of substring
        int start = 0;
        // end index of substring
        int end = 0;
        while (end < s.length()) {
            char ch = s.charAt(end);
            // ensure s[start:end] has length <= k and distinct chars
            int newStart = occur.getOrDefault(ch, end - k);
            while (start <= newStart) {
                occur.remove(s.charAt(start));
                start++;
            }
            occur.put(ch, end);
            end++;
            if (end - start < k)
                continue;
            String sub = s.substring(start, end);
            if (!found.contains(sub)) {
                found.add(sub);
                res.add(sub);
            }
        }
        int n = res.size(); 
        String arr[] = new String[n]; 
  
        int i = 0; 
        for (String x : res) 
            arr[i++] = x; 
        return arr;
    }
  public static void main(String[] args){
      Scanner scanner = new Scanner(System.in);
      String s = scanner.nextLine().trim();
      int k = Integer.parseInt(scanner.nextLine());
      scanner.close();
      System.out.println(String.join(" ", subString(s,k)));
  }
}


=================================================================================================
import java.util.*;
class Solution {
    public static String[] subString(String s, int k){
       // WRITE YOUR BRILLIANT CODE HERE
        LinkedHashSet<String> set = new LinkedHashSet<>();
		for(int i =0;i<s.length()-k+1;i++) {
			StringBuilder sb = new StringBuilder();
			String st = "";
			for(int j=i;j<i+k;j++) {
				if(st.indexOf(s.charAt(j))!=-1) {
					break;
				}
				else {
					st = st+s.charAt(j);
				}	
			}
			if(st.length()==k){
				set.add(st);
			}
		}
        int n = set.size(); 
        String arr[] = new String[n]; 
  
        int i = 0; 
        for (String x : set) 
            arr[i++] = x; 
        return arr;
    }
  public static void main(String[] args){
      Scanner scanner = new Scanner(System.in);
      String s = scanner.nextLine().trim();
      int k = Integer.parseInt(scanner.nextLine());
      scanner.close();
      System.out.println(String.join(" ", subString(s,k)));
  }
}
