
Amazon's Fulfillment Center consists of a packaging bay where orders are automatically packaged in 
groups(n). The first group can only have 1 item and all the subsequent groups can have one item more
than the previous group.
Given a list of items on groups, perform certain operations in order to satisfy the constraints
required by packaging automation.

The conditions are as follows:
- The first group must contain 1 item only.
- For all other groups, the difference between the number of items in adjacent groups must not be
greater than 1.
- In other words, for 1<=i<n, arr[i]-arr[i-1]<=1
- To accomplish this, the following operations are available.
- Rearrange the groups in any way.
- Reduce any group to any number that is at least 1

Write an algorithm to find the maximum number of items that can be packaged in the last group with 
the conditions in place.

Input
The function/method consists of two arguments:
- numGroups, an integer representing the number of groups(n);
- arr, a list of integers representing the number of items in each group

Output
- Return an integer representing the maximum items that can be packaged for the final group of the 
list given the conditions above.

Examples:
Input: numGroups = 4, arr = [1,3,2,2]
Output: 3
Input: numGroups = 4, arr = [3,2,3,5]
Output: 4
--------------------------------------------------------------------
public class HelloWorld{

     public static void main(String []args){
        int numGroups = 4;
        int[] arr = {1, 3, 2, 2};  // expected : 3
        
        // int numGroups = 4;
        // int[] arr = {1, 1, 1, 1}; // expected : 1
        
        // int numGroups = 15;
        // int[] arr = {1,1,1,1,2,1,1,2,1,1,1,1,1,2,1}; // expected : 3
        
        // int numGroups = 10;
        // int[] arr = {1, 2, 2, 3, 3, 3, 4, 4, 4, 4}; // expected : 6
        
        // int numGroups = 13;
        // int[] arr = {1, 1, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4};  // expected : 7
        
        // int numGroups = 9;
        // int[] arr = {4,5,67,7,8,1,3,4,6};  // expected : 9
        
        int result = packagingAutomation(numGroups, arr);
        System.out.println(result);
     }
     
     public static int packagingAutomation(int numGroups, int[] arr) {
         int result = 0;
         for(int i = 0; i < numGroups; i++) {
             result += arr[i];
         }
         
         while(result < numGroups*(numGroups+1)/2) {
             result--;
             numGroups--;
         }
         return numGroups;
     }
}
