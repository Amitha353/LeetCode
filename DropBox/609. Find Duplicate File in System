class Solution {
    public List<List<String>> findDuplicate(String[] paths) {
        List<List<String>> result = new ArrayList<>();
        HashMap<String, List<String>> map = new HashMap<>();
        for(String path: paths) {
            String[] vals = path.split(" ");
            String file_dir = vals[0];
            for(int i = 1; i < vals.length; i++) {
                String[] file_info = vals[i].split("\\(");
                String file_name = file_info[0];
                String file_content = file_info[1].replace(")","");
                List<String> list = map.getOrDefault(file_content, new ArrayList<>());
                list.add(file_dir+"/"+file_name);
                map.put(file_content, list);
            }
        }
        for(String key: map.keySet()) {
            if(map.get(key).size() > 1 ) {
                result.add(map.get(key));
            }
        }
        return result;
    }
}

/*Explaination
- The directory path is broken into -> pathname, filename -> content
- Hash -> content and filename
*/
