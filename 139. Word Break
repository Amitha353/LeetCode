class Solution {
    public boolean wordBreak(String s, List<String> wordDict) {
        boolean[] possible = new boolean[s.length()+1];
        possible[0] = true;
        
        for(int i = 1; i <= s.length(); i++) {
            for(int j = 0; j < i; j++) {
                System.out.println(j + " " + i + " " + s.substring(j, i));
                if(possible[j] && wordDict.contains(s.substring(j, i))) {
                    System.out.println(s.substring(j, i) + " exists!");
                    possible[i] = true;
                    break;
                }
            }
        }
        return possible[s.length()];
    }
}

/*
Time Complexity - O(N^2) N -> length of String
Space Complexity - O(N)
*/
